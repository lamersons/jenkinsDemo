build_root = "/home/kali/Repos/jenkinsDemo/"
vagrant_root = build_root + "/coreos-vagrant/"
exec_br_remote_cmd = "sshpass -p unuzan55 ssh -oStrictHostKeyChecking=no lamersons@172.17.0.1 'cd ${build_root};"
exec_vr_remote_cmd = "sshpass -p unuzan55 ssh -oStrictHostKeyChecking=no lamersons@172.17.0.1 'cd ${vagrant_root};"

pipeline {
  agent any
  stages {
    stage('rollout_init_infra') {
      steps {
        script {
          get_etcd_discovery = sh(
            script: 'curl -s https://discovery.etcd.io/new',
            returnStdout: true
          ).replaceAll('/', '\\\\/')
        }
        echo "${get_etcd_discovery}"
        sh "${exec_br_remote_cmd} rm -rf coreos-vagrant/'"
        sh "${exec_br_remote_cmd} git clone https://github.com/coreos/coreos-vagrant.git'"
        sh "${exec_vr_remote_cmd} cp user-data.sample user-data; cp config.rb.sample config.rb'"
        sh "${exec_vr_remote_cmd} sed -i \"s/#discovery: https:\\/\\/discovery.etcd.io\\/<token>/discovery: ${get_etcd_discovery}/g\" user-data'"
        sh "${exec_vr_remote_cmd} sed -i \"s/num_instances=1/num_instances=3/g\" config.rb'"
        sh "${exec_vr_remote_cmd} sed -i \"s/alpha/stable/g\" config.rb'"
        sh "${exec_vr_remote_cmd} vagrant up'"
        sh "${exec_vr_remote_cmd} vagrant status'"
      }
    }
  }
}
